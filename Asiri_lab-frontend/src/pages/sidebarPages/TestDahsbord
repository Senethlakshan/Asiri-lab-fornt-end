// import React, { useState, useEffect } from 'react';
// import Breadcrumb from '../../components/Breadcrumb';
// import {
//   FaSearch,
//   FaFilter,
//   FaEye,
//   FaUserPlus,
//   FaTrashAlt,
// } from 'react-icons/fa';
// import '../../css/Dashbord.css';
// import { FaUser } from 'react-icons/fa';
// import { Link } from 'react-router-dom';

// interface PolicyData {
//   proposerCode: string;
//   registrationNumber: string;
//   companyCode: string;
//   proposerName: string;
//   documentNo: string;
// }

// const Dashboard: React.FC = () => {
//   const [proposerCode, setProposerCode] = useState('');
//   const [registrationNumber, setRegistrationNumber] = useState('');
//   const [tableData, setTableData] = useState<PolicyData[]>([]);
//   const [currentPage, setCurrentPage] = useState(1);
//   const [loading, setLoading] = useState(false);

//   const itemsPerPage = 10;
//   const totalPages = Math.ceil(tableData.length / itemsPerPage);

//   const handleSearch = async () => {
//     try {
//       setLoading(true);
//       // Make an API call with the current search parameters
//       const response = await fetch(
//         'http://localhost:8081/api/policies/search',
//         {
//           method: 'POST',
//           headers: {
//             'Content-Type': 'application/json',
//           },
//           body: JSON.stringify({
//             proposerCode,
//             registrationNumber,
//           }),
//         },
//       );

//       if (!response.ok) {
//         throw new Error('Failed to fetch data');
//       }

//       const data: PolicyData[] = await response.json();
//       setTableData(data);
//     } catch (error) {
//       console.error('Error fetching data:', error);
//     } finally {
//       setLoading(false);
//     }
//   };

//   const handleClickPage = (page: number) => {
//     setCurrentPage(page);
//   };

//   const renderTableData = () => {
//     const startIndex = (currentPage - 1) * itemsPerPage;
//     const endIndex = startIndex + itemsPerPage;

//     const currentPageData = tableData.slice(startIndex, endIndex);

//     return currentPageData.map((item, index) => (
//       <tr key={startIndex + index}>
//         <td className='border p-2'>{item.proposerCode}</td>
//         <td className='border p-2'>{item.registrationNumber}</td>
//         <td className='border p-2'>{item.companyCode}</td>
//         <td className='border p-2'>{item.proposerName}</td>
//         <td className='border p-2'>{item.documentNo}</td>
//         <td className='border p-2'>
//         <div className="action-icons">
//                   <Link to="/dashboard/Company-Profile">
//                       <button className="icon-dashbord">
//                        <FaEye className="ml-2" />
//                       </button>
//                     </Link>
//                     <Link to="/dashboard/AddUser">
//                       <button className="icon-dashbord">
//                        <FaUserPlus className="ml-2" />
//                       </button>
//                     </Link>
                    
//                     <Link to="/dashboard/Delete-user">
//                       <button className="icon-dashbord">
//                        <FaTrashAlt className="ml-2" />
//                       </button>
//                     </Link>

//                  </div>
//         </td>
//       </tr>
//     ));
//   };

//   const renderPagination = () => {
//     const pages = Array.from({ length: totalPages }, (_, index) => index + 1);
//     return (
//       <div className="mt-4">
//         {pages.map((page) => (
//           <button
//             key={page}
//             className={`mx-1 px-3 py-1 rounded ${
//               currentPage === page
//                 ? 'bg-yellow text-white border-'
//                 : 'bg-yellowdark text-white'
//             }`}
//             onClick={() => handleClickPage(page)}
//           >
//             {page}
//           </button>
//         ))}
//       </div>
//     );
//   };

//   return (
//     <>
//       <Breadcrumb pageName="Dashboard" />
//       <div className="flex items-center mb-4 relative">
//         {/* Search input fields */}
//         <input
//           type="text"
//           placeholder="Proposer Code"
//           value={proposerCode}
//           onChange={(e) => setProposerCode(e.target.value)}
//           className="mr-2 p-2 border border-gray-300"
//         />
//         <input
//           type="text"
//           placeholder="Registration Number"
//           value={registrationNumber}
//           onChange={(e) => setRegistrationNumber(e.target.value)}
//           className="mr-2 p-2 border border-gray-300"
//         />

//         {/* Search button */}
//         <button
//           onClick={handleSearch}
//           className="p-2  text-white rounded bg-yellow"
//         >
//           Search
//         </button>
//       </div>

//       {/* Table view */}
//       {loading ? (
//         // Skeleton loader while data is being fetched
//         <div className="animate-pulse">
//           <div className="flex space-x-4">
//             <div className="h-4 bg-graydark w-1/5"></div>
//             <div className="h-4 bg-graydark w-1/5"></div>
//             <div className="h-4 bg-graydark w-1/5"></div>
//             <div className="h-4 bg-graydark w-1/5"></div>
//             <div className="h-4 bg-graydark w-1/5"></div>
//           </div>
//           <div className="flex items-center justify-center mt-20">
//   <h1 className="text-center">Loading...Please Wait</h1>
// </div>
//         </div>
//       ) : (
//         <table className="min-w-full border-collapse border"> 
//         <thead>
//           <tr className="bg-yellow">
//             <th className="border p-2 text-center">Proposer Code</th>
//             <th className="border p-2 text-center">Registration Number</th> 
//             <th className="border p-2 text-center">Company Code</th>
//             <th className="border p-2 text-center">Proposer Name</th>
//             <th className="border p-2 text-center">Document No</th>
//             <th className="border p-2 text-center">Action</th>
//           </tr>
//         </thead>
//         <tbody>
//          {renderTableData()}  
//         </tbody>
//       </table>
//       )}

//       {/* Pagination */}
//       {totalPages > 1 && (
//         <div className="absolute bottom-0 left-0 right-0 p-2 bg-white">
//           {renderPagination()}
//         </div>
//       )}

//       {/* create profile button section  */}
//       <div className="bottom-sec">
//         <Link to="/dashboard/CreateProfile">
//           <button className="create_profile_btn">
//             Create Profile <FaUser className="ml-2" />
//           </button>
//         </Link>
//       </div>
//     </>
//   );
// };

// export default Dashboard;

/////


// import React, { useState } from 'react';
// import { FaSpinner } from 'react-icons/fa';
// import Breadcrumb from '../../src/components/Breadcrumb';

// interface PolicyData {
//   proposerCode: string;
//   registrationNumber: string;
//   companyCode: string;
//   proposerName: string;
//   documentNo: string;
// }

// interface SecondApiData {
//   documentNo: string;
//   createDt: string;
//   commenceDate: string;
//   status: string;
// }

// const CreateProfile: React.FC = () => {
//   const [proposerCode, setProposerCode] = useState('');
//   const [registrationNumber, setRegistrationNumber] = useState('');
//   const [proposerName, setProposerName] = useState('');
//   const [tableData, setTableData] = useState<PolicyData[]>([]);
//   const [tableData2, setTableData2] = useState<SecondApiData[]>([]);
//   const [loading, setLoading] = useState(false);


//   const handleSearch = async () => {
//     try {
//       setLoading(true);

//       const response = await fetch('http://localhost:7101/Claim_sending_2/jersey/SearchPolicy', {
//         method: 'POST',
//         headers: {
//           'Content-Type': 'application/json',
//         },
//         body: JSON.stringify({
//           proposerCode,
//           registrationNumber,
//         }),
//       });

//       if (!response.ok) {
//         throw new Error('Failed to fetch data');
//       }

//       const data: PolicyData[] = await response.json();
//       setTableData(data);

     
//     } catch (error) {
//       console.error('Error fetching data:', error);
//     } finally {
//       setLoading(false);
//     }
//   };

//   const renderForm = () => {
//     const data = tableData.length > 0 ? tableData[0] : null;

//     return (
//       <>
//         <div className="acc-container bg-stroke rounded-md p-4">
//           <div className="form-grid">
//             <div className="form-row">
//               <label htmlFor="firstName"> BR Number</label>
//               <input
//                 type="text"
//                 value={data ? data.registrationNumber : registrationNumber}
//                 readOnly={!data}
//                 onChange={(e) => setRegistrationNumber(e.target.value)}
//               />
//             </div>

//             <div className="form-row">
//               <label htmlFor="lastName">Company Name</label>
//               <input
//                 type="text"
//                 value={data ? data.proposerName : proposerName}
//                 readOnly={!data}
//                 onChange={(e) => setProposerName(e.target.value)}
//               />
//             </div>

//             <div className="form-row">
//               <label htmlFor="lastName">Contact Number</label>
//               <input type="text" id="lastName" name="lastName" />
//             </div>
//           </div>

//           <div className="form-grid">
//             <div className="form-row">
//               <label htmlFor="password">Profile Name</label>
//               <input type="text" id="password" name="password" />
//             </div>
//             <div className="form-row">
//               <label htmlFor="password">Address</label>
//               <input type="text" id="password" name="password" />
//             </div>
//           </div>
//         </div>
//         <div className="bg-gray">
//           <table className="min-w-full border-collapse border ml-4 ">
//             <thead>
//               <tr>
//                 <th>Select</th>
//                 <th>Document No</th>
//                 <th>Create Date</th>
//                 <th>Commence Date</th>
//                 <th>Status</th>
//               </tr>
//             </thead>
//             <tbody>
//               {tableData2 &&
//                 tableData2.map((item: SecondApiData) => (
//                   <tr key={item.documentNo}>
//                     <td className="border p-2 text-center">
//                       <input type="checkbox" />
//                     </td>
//                     <td className="border p-2 text-center">{item.documentNo}</td>
//                     <td className="border p-2 text-center">{item.createDt}</td>
//                     <td className="border p-2 text-center">{item.commenceDate}</td>
//                     <td className="border p-2 text-center">{item.status}</td>
//                   </tr>
//                 ))}
//             </tbody>
//           </table>

//         </div>

//          {/* create button and cansel            */}
//         <div className='create-btn-section '>
//           <button className='mx-4 my-4 p-4 bg-yellowdark text-white'>Create</button> 
//           <button className='mx-4 my-4 p-4 bg-red text-white'>Cansel</button>
//         </div>
//       </>
//     );
//   };

//   return (
//     <>
//       <Breadcrumb pageName="Create Profile" />
//       <div className="flex items-center mb-4 relative">
//         {/* Search input fields */}
//         <input
//           type="text"
//           placeholder="Proposer Code"
//           value={proposerCode}
//           onChange={(e) => setProposerCode(e.target.value)}
//           className="mr-2 ml-4 p-2 border border-gray-300"
//         />

//         {/* Search button */}
//         <button
//           onClick={handleSearch}
//           className="p-2 text-white rounded bg-yellow"
//         >
//           Search
//         </button>
//       </div>

//       {/* Render form */}
//       {loading ? (
//         <div className="animate-pulse">
//           <div className="flex items-center justify-center absolute inset-0 bg-gray bg-opacity-50">
//             <div className="bg-white p-4 rounded shadow-md flex">
//               <FaSpinner className="animate-spin mr-2" />
//               Searching...
//             </div>
//           </div>
//         </div>
//       ) : (
//         renderForm()
//       )}
//     </>
//   );
// };

// export default CreateProfile;

